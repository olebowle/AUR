diff -ur a/linux/drivers/media/pci/bt8xx/bttv-input.c b/linux/drivers/media/pci/bt8xx/bttv-input.c
--- a/linux/drivers/media/pci/bt8xx/bttv-input.c	2013-05-07 10:26:35.000000000 +0200
+++ b/linux/drivers/media/pci/bt8xx/bttv-input.c	2013-07-29 21:46:08.196302000 +0200
@@ -414,10 +414,10 @@
 
 int fini_bttv_i2c(struct bttv *btv)
 {
-	if (0 != btv->i2c_rc)
-		return 0;
+	if (btv->i2c_rc == 0)
+		i2c_del_adapter(&btv->c.i2c_adap);
 
-	return i2c_del_adapter(&btv->c.i2c_adap);
+	return 0;
 }
 
 int bttv_input_init(struct bttv *btv)
diff -ur a/linux/drivers/media/pci/mantis/mantis_i2c.c b/linux/drivers/media/pci/mantis/mantis_i2c.c
--- a/linux/drivers/media/pci/mantis/mantis_i2c.c	2013-01-25 05:46:09.000000000 +0100
+++ b/linux/drivers/media/pci/mantis/mantis_i2c.c	2013-07-29 21:46:08.196302000 +0200
@@ -261,6 +261,8 @@
 	mmwrite((intmask & ~MANTIS_INT_I2CDONE), MANTIS_INT_MASK);
 
 	dprintk(MANTIS_DEBUG, 1, "Removing I2C adapter");
-	return i2c_del_adapter(&mantis->adapter);
+	i2c_del_adapter(&mantis->adapter);
+
+	return 0;
 }
 EXPORT_SYMBOL_GPL(mantis_i2c_exit);
diff -ur a/linux/drivers/media/pci/ttpci/av7110_ir.c b/linux/drivers/media/pci/ttpci/av7110_ir.c
--- a/linux/drivers/media/pci/ttpci/av7110_ir.c	2013-01-25 05:46:09.000000000 +0100
+++ b/linux/drivers/media/pci/ttpci/av7110_ir.c	2013-07-29 21:46:08.196302000 +0200
@@ -375,7 +375,7 @@
 	if (av_cnt == 1) {
 		e = proc_create("av7110_ir", S_IWUSR, NULL, &av7110_ir_proc_fops);
 		if (e)
-			e->size = 4 + 256 * sizeof(u16);
+			proc_set_size(e, 4 + 256 * sizeof(u16));
 	}
 
 	tasklet_init(&av7110->ir.ir_tasklet, av7110_emit_key, (unsigned long) &av7110->ir);
diff -ur a/linux/drivers/media/pci/zoran/zoran_procfs.c b/linux/drivers/media/pci/zoran/zoran_procfs.c
--- a/linux/drivers/media/pci/zoran/zoran_procfs.c	2012-08-15 22:42:37.000000000 +0200
+++ b/linux/drivers/media/pci/zoran/zoran_procfs.c	2013-07-29 21:46:08.196302000 +0200
@@ -130,14 +130,14 @@
 
 static int zoran_open(struct inode *inode, struct file *file)
 {
-	struct zoran *data = PDE(inode)->data;
+	struct zoran *data = PDE_DATA(inode);
 	return single_open(file, zoran_show, data);
 }
 
 static ssize_t zoran_write(struct file *file, const char __user *buffer,
 			size_t count, loff_t *ppos)
 {
-	struct zoran *zr = PDE(file->f_path.dentry->d_inode)->data;
+	struct zoran *zr = PDE_DATA(file->f_path.dentry->d_inode);
 	char *string, *sp;
 	char *line, *ldelim, *varname, *svar, *tdelim;
 
@@ -200,8 +200,8 @@
 	if (zr->zoran_proc != NULL) {
 		dprintk(2,
 			KERN_INFO
-			"%s: procfs entry /proc/%s allocated. data=%p\n",
-			ZR_DEVNAME(zr), name, zr->zoran_proc->data);
+			"%s: procfs entry /proc/%s allocated\n",
+			ZR_DEVNAME(zr), name);
 	} else {
 		dprintk(1, KERN_ERR "%s: Unable to initialise /proc/%s\n",
 			ZR_DEVNAME(zr), name);
